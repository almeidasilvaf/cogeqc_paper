{
  "hash": "495c1c26e50782e1a50db7b86e6e4e11",
  "result": {
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Assessing orthogroup inference in public databases\n\nHere, we will use the protein domain-based approach \nin *[cogeqc](https://bioconductor.org/packages/3.17/cogeqc)* to assess gene families from \ndifferent sources, namely:\n\n- PLAZA Dicots 5.0 [@van2022plaza]\n- OrthoDB [@kuznetsov2023orthodb]\n- eggNOG [@hernandez2023eggnog]\n- HOGENOM [@penel2009databases]\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cogeqc)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(ggpubr)\n\nset.seed(123) # for reproducibility\nsource(here(\"code\", \"utils.R\"))\n```\n:::\n\n\n## Calculating orthogroup scores\n\nTo make comparison possible, we will *Arabidopsis thaliana* domain annotation\nas a proxy, as this species is present in all of the aforementioned databases.\nFor that, we will use the function `calculate_H()` from \n*[cogeqc](https://bioconductor.org/packages/3.17/cogeqc)*.\n\nOrthogroups assignments from OrthoDB, eggNOG, InParanoid, PhylomeDB, and\nHOGENOM will be obtained from UniProt.\n\n### PLAZA Dicots 5.0\n\nBelow, we will obtain orthogroups and *A. thaliana*'s domain annotation from\nPLAZA 5.0, and then we will calculate homogeneity scores for each orthogroup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtain gene families from PLAZA\nfams_plaza <- readr::read_tsv(\n    paste0(\n        \"https://ftp.psb.ugent.be/pub/plaza/plaza_public_dicots_05/\",\n        \"GeneFamilies/genefamily_data.HOMFAM.csv.gz\"\n    ), show_col_types = FALSE, skip = 2\n) %>%\n    filter(species == \"ath\") %>%\n    as.data.frame()\nnames(fams_plaza) <- c(\"Orthogroup\", \"Species\", \"Gene\")\nhead(fams_plaza)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Orthogroup Species      Gene\n1 HOM05D000001     ath AT1G02310\n2 HOM05D000001     ath AT1G03510\n3 HOM05D000001     ath AT1G03540\n4 HOM05D000001     ath AT1G04020\n5 HOM05D000001     ath AT1G04840\n6 HOM05D000001     ath AT1G05750\n```\n:::\n\n```{.r .cell-code}\n# Obtain domain anotation for A. thaliana\nath_interpro <- readr::read_tsv(\n    paste0(\n        \"https://ftp.psb.ugent.be/pub/plaza/plaza_public_dicots_05/\",\n        \"InterPro/interpro.ath.csv.gz\"\n    ), show_col_types = FALSE, skip = 8\n) %>%\n    select(1,3)\nnames(ath_interpro) <- c(\"Gene\", \"Annotation\")\nhead(ath_interpro)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  Gene      Annotation\n  <chr>     <chr>     \n1 AT1G01010 IPR036093 \n2 AT1G01010 IPR003441 \n3 AT1G01010 IPR036093 \n4 AT1G01020 IPR007290 \n5 AT1G01020 IPR007290 \n6 AT1G01030 IPR003340 \n```\n:::\n\n```{.r .cell-code}\n# Combining everything and calculating homogeneity scores\nfam_df_plaza <- merge(fams_plaza, ath_interpro)\nhead(fam_df_plaza)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Gene   Orthogroup Species Annotation\n1 AT1G01010 HOM05D000010     ath  IPR036093\n2 AT1G01010 HOM05D000010     ath  IPR003441\n3 AT1G01010 HOM05D000010     ath  IPR036093\n4 AT1G01020 HOM05D006082     ath  IPR007290\n5 AT1G01020 HOM05D006082     ath  IPR007290\n6 AT1G01030 HOM05D000466     ath  IPR015300\n```\n:::\n\n```{.r .cell-code}\nH_summary <- function(ortho_df = NULL) {\n    H <- calculate_H(ortho_df)\n    mean_H <- round(mean(H$Score), 2)\n    median_H <- round(median(H$Score), 2)\n    result_list <- list(H = H, mean_score = mean_H, median_score = median_H)\n    return(result_list)\n}\n\nH_plaza <- H_summary(fam_df_plaza)\nhead(H_plaza$H)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Orthogroup     Score\n1 HOM05D000001  283.3132\n2 HOM05D000002  129.9598\n3 HOM05D000003  889.1268\n4 HOM05D000004    0.0000\n5 HOM05D000005 1135.8799\n6 HOM05D000006 2820.8337\n```\n:::\n:::\n\n\n### OrthoDB, eggNOG, and HOGENOM\n\nOrthogroup assignments from these databases will be obtained from \nUniProt [@uniprot2021uniprot].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get list of proteins - from primary transcripts only\nath_proteome <- Biostrings::readAAStringSet(\n    paste0(\n        \"https://ftp.uniprot.org/pub/databases/uniprot/\",\n        \"current_release/knowledgebase/reference_proteomes/Eukaryota/\",\n        \"UP000006548/UP000006548_3702.fasta.gz\"\n    )\n)\nath_proteins <- names(ath_proteome)\nath_proteins <- sapply(strsplit(ath_proteins, split = \"\\\\|\"), `[`, 2)\n\n# Extract phylogenomic information for all genes\nsource(here::here(\"code\", \"utils.R\"))\nfams_uniprot <- extract_ogs_uniprot(ath_proteins)\n\nfams_orthodb <- fams_uniprot[, c(\"Gene\", \"OrthoDB\")] %>% drop_na()\nfams_eggnog <- fams_uniprot[, c(\"Gene\", \"eggNOG\")] %>% drop_na()\nfams_hogenom <- fams_uniprot[, c(\"Gene\", \"HOGENOM\")] %>% drop_na()\n\n#----Calculate homogeneity scores for each database-----------------------------\n# OrthoDB\nfams_df_orthodb <- merge(fams_orthodb, ath_interpro)\nnames(fams_df_orthodb)[2] <- \"Orthogroup\"\nH_orthodb <- H_summary(fams_df_orthodb)\n\n# eggNOG\nfams_df_eggnog <- merge(fams_eggnog, ath_interpro)\nnames(fams_df_eggnog)[2] <- \"Orthogroup\"\nH_eggnog <- H_summary(fams_df_eggnog)\n\n# HOGENOM\nfams_df_hogenom <- merge(fams_hogenom, ath_interpro)\nnames(fams_df_hogenom)[2] <- \"Orthogroup\"\nH_hogenom <- H_summary(fams_df_hogenom)\n```\n:::\n\n\n## Comparing homogeneity scores\n\nFinally, let's compare homogeneity scores and visualize their distributions.\nFirst, let's combine all data frames of homogeneity scores into a single\ndata frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH_combined <- bind_rows(\n    H_plaza$H %>% mutate(Source = \"PLAZA\"),\n    H_orthodb$H %>% mutate(Source = \"OrthoDB\"),\n    H_eggnog$H %>% mutate(Source = \"eggNOG\"),\n    H_hogenom$H %>% mutate(Source = \"HOGENOM\")\n)\n\nsave(\n    H_combined,\n    file = here::here(\"products\", \"result_files\", \"H_combined.rda\"),\n    compress = \"xz\"\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nNow, let's compare the distributions of homogeneity scores for each database\nto see if there are any differences. For that, we will calculate P-values\nfrom a Wilcoxon test with Wicoxon effect sizes (r). The Wilcoxon effect size\nis calculated as the Z statistic divided by the square root of the sample size.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scale scores to maximum, so that they range from 0 to 1\nH_combined$Score <- H_combined$Score / max(H_combined$Score)\nhead(H_combined)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Orthogroup      Score Source\n1 HOM05D000001 0.10043599  PLAZA\n2 HOM05D000002 0.04607143  PLAZA\n3 HOM05D000003 0.31520000  PLAZA\n4 HOM05D000004 0.00000000  PLAZA\n5 HOM05D000005 0.40267523  PLAZA\n6 HOM05D000006 1.00000000  PLAZA\n```\n:::\n\n```{.r .cell-code}\n# Quick exploration of means and medians\nH_combined %>%\n    group_by(Source) %>%\n    summarise(mean = mean(Score), median = median(Score))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  Source   mean median\n  <chr>   <dbl>  <dbl>\n1 HOGENOM 0.603  0.609\n2 OrthoDB 0.578  0.567\n3 PLAZA   0.610  0.6  \n4 eggNOG  0.565  0.546\n```\n:::\n\n```{.r .cell-code}\n# Compare homogeneity scores - all vs all\ndb_wilcox <- compare(H_combined, \"Score ~ Source\")\n\ndb_wilcox |>\n    filter_comparison() |>\n    knitr::kable(\n        caption = \"Mann-Whitney U test for differences in orthogroup scores with Wilcoxon effect sizes.\",\n        digits = 10\n    )\n```\n\n::: {.cell-output-display}\nTable: Mann-Whitney U test for differences in orthogroup scores with Wilcoxon effect sizes.\n\n|group1  |group2  |   n1|   n2|    padj|    effsize|magnitude |\n|:-------|:-------|----:|----:|-------:|----------:|:---------|\n|eggNOG  |HOGENOM | 3092| 3257| 0.0e+00| 0.11102956|small     |\n|eggNOG  |OrthoDB | 3092| 3201| 8.5e-09| 0.07197679|small     |\n|eggNOG  |PLAZA   | 3092| 3503| 0.0e+00| 0.09434683|small     |\n|HOGENOM |OrthoDB | 3257| 3201| 0.0e+00| 0.09071787|small     |\n|HOGENOM |PLAZA   | 3257| 3503| 3.0e-03| 0.03402611|small     |\n|OrthoDB |PLAZA   | 3201| 3503| 7.0e-10| 0.07526911|small     |\n:::\n:::\n\n\nWe can see that there are diffences in mean. In summary:\n\n1. eggNOG orthogroups have lower scores than every other source\n\n2. HOGENOM orthogroups have higher scores than OrthoDB, but lower than PLAZA.\n\n3. PLAZA orthogroup scores are higher than every other database.\n\n\nHowever, the effect sizes are very small, suggesting that significant \ndifferences could be due to large sample sizes, as P-values are highly\naffected by sample sizes.\n\nNow, let's visualize the distributions with significant differences \nhighlighted. Here, we will only display comparison bars for comparisons with\n*P* < 0.05 and effect sizes > 0.1.\n\n\n::: {.cell fig.dpi='200'}\n\n```{.r .cell-code}\n# Comparisons to be made\ncomps <- list(\n    c(\"HOGENOM\", \"eggNOG\")\n)\n\n# Change order of levels according to comparison results\nH_combined$Source <- factor(\n    H_combined$Source, levels = rev(c(\n        \"PLAZA\", \"HOGENOM\", \"OrthoDB\", \"eggNOG\"\n    ))\n)\n\n# Visualize distributions with significant differences highlighted\ndistros <- ggviolin(\n    H_combined, y = \"Score\", x = \"Source\", \n    orientation = \"horiz\", trim = TRUE, add = c(\"boxplot\", \"mean\"), \n    fill = \"Source\", add.params = list(fill = \"white\"), palette = \"jama\"\n) +\n    ggpubr::stat_compare_means(\n        comparisons = comps,\n        label = \"p.signif\",\n        method = \"wilcox.test\"\n    ) +\n    theme(legend.position = \"none\") +\n    labs(y = \"Scaled homogeneity scores\", x = \"Source of orthogroups\",\n         title = \"Distribution of mean homogeneity scores for orthogroups\",\n         subtitle = \"Scores were calculated based on *A. thaliana* genes\") +\n    theme(plot.subtitle = ggtext::element_markdown())\n\ndistros\n```\n\n::: {.cell-output-display}\n![Distribution of mean orthogroup scores.](03_orthogroup_inference_dbs_files/figure-html/visualize-distros-1.png){width=672}\n:::\n:::\n\n\nTo conclude, despite some significant differences, all databases perform \nequally well in their orthogroup definition. The observed differences in means\ncould be due to large sample sizes, as indicated by very low effect sizes,\nand to the different species composition of the database.\n\n\n::: {.cell}\n\n:::\n\n\n## Session info {.unnumbered}\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Brussels\n date     2023-08-07\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package          * version   date (UTC) lib source\n abind              1.4-5     2016-07-21 [1] CRAN (R 4.3.0)\n ape                5.7-1     2023-03-13 [1] CRAN (R 4.3.0)\n aplot              0.1.10    2023-03-08 [1] CRAN (R 4.3.0)\n backports          1.4.1     2021-12-13 [1] CRAN (R 4.3.0)\n beeswarm           0.4.0     2021-06-01 [1] CRAN (R 4.3.0)\n BiocGenerics       0.46.0    2023-04-25 [1] Bioconductor\n BiocManager        1.30.21.1 2023-07-18 [1] CRAN (R 4.3.0)\n BiocStyle          2.29.1    2023-08-04 [1] Github (Bioconductor/BiocStyle@7c0e093)\n Biostrings         2.68.0    2023-04-25 [1] Bioconductor\n bit                4.0.5     2022-11-15 [1] CRAN (R 4.3.0)\n bit64              4.0.5     2020-08-30 [1] CRAN (R 4.3.0)\n bitops             1.0-7     2021-04-24 [1] CRAN (R 4.3.0)\n broom              1.0.4     2023-03-11 [1] CRAN (R 4.3.0)\n car                3.1-2     2023-03-30 [1] CRAN (R 4.3.0)\n carData            3.0-5     2022-01-06 [1] CRAN (R 4.3.0)\n cli                3.6.1     2023-03-23 [1] CRAN (R 4.3.0)\n codetools          0.2-19    2023-02-01 [4] CRAN (R 4.2.2)\n cogeqc           * 1.4.0     2023-04-25 [1] Bioconductor\n coin               1.4-2     2021-10-08 [1] CRAN (R 4.3.0)\n colorspace         2.1-0     2023-01-23 [1] CRAN (R 4.3.0)\n commonmark         1.9.0     2023-03-17 [1] CRAN (R 4.3.0)\n crayon             1.5.2     2022-09-29 [1] CRAN (R 4.3.0)\n curl               5.0.0     2023-01-12 [1] CRAN (R 4.3.0)\n digest             0.6.33    2023-07-07 [1] CRAN (R 4.3.0)\n dplyr            * 1.1.2     2023-04-20 [1] CRAN (R 4.3.0)\n evaluate           0.21      2023-05-05 [1] CRAN (R 4.3.0)\n fansi              1.0.4     2023-01-22 [1] CRAN (R 4.3.0)\n farver             2.1.1     2022-07-06 [1] CRAN (R 4.3.0)\n fastmap            1.1.1     2023-02-24 [1] CRAN (R 4.3.0)\n forcats          * 1.0.0     2023-01-29 [1] CRAN (R 4.3.0)\n generics           0.1.3     2022-07-05 [1] CRAN (R 4.3.0)\n GenomeInfoDb       1.36.0    2023-04-25 [1] Bioconductor\n GenomeInfoDbData   1.2.10    2023-04-28 [1] Bioconductor\n ggbeeswarm         0.7.2     2023-04-29 [1] CRAN (R 4.3.0)\n ggfun              0.0.9     2022-11-21 [1] CRAN (R 4.3.0)\n ggplot2          * 3.4.1     2023-02-10 [1] CRAN (R 4.3.0)\n ggplotify          0.1.0     2021-09-02 [1] CRAN (R 4.3.0)\n ggpubr           * 0.6.0     2023-02-10 [1] CRAN (R 4.3.0)\n ggsci              3.0.0     2023-03-08 [1] CRAN (R 4.3.0)\n ggsignif           0.6.4     2022-10-13 [1] CRAN (R 4.3.0)\n ggtext             0.1.2     2022-09-16 [1] CRAN (R 4.3.0)\n ggtree             3.8.0     2023-04-25 [1] Bioconductor\n glue               1.6.2     2022-02-24 [1] CRAN (R 4.3.0)\n gridGraphics       0.5-1     2020-12-13 [1] CRAN (R 4.3.0)\n gridtext           0.1.5     2022-09-16 [1] CRAN (R 4.3.0)\n gtable             0.3.3     2023-03-21 [1] CRAN (R 4.3.0)\n here             * 1.0.1     2020-12-13 [1] CRAN (R 4.3.0)\n hms                1.1.3     2023-03-21 [1] CRAN (R 4.3.0)\n htmltools          0.5.5     2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets        1.6.2     2023-03-17 [1] CRAN (R 4.3.0)\n igraph             1.4.2     2023-04-07 [1] CRAN (R 4.3.0)\n IRanges            2.34.0    2023-04-25 [1] Bioconductor\n jsonlite           1.8.7     2023-06-29 [1] CRAN (R 4.3.0)\n knitr              1.43      2023-05-25 [1] CRAN (R 4.3.0)\n labeling           0.4.2     2020-10-20 [1] CRAN (R 4.3.0)\n lattice            0.20-45   2021-09-22 [4] CRAN (R 4.2.0)\n lazyeval           0.2.2     2019-03-15 [1] CRAN (R 4.3.0)\n libcoin            1.0-9     2021-09-27 [1] CRAN (R 4.3.0)\n lifecycle          1.0.3     2022-10-07 [1] CRAN (R 4.3.0)\n lubridate        * 1.9.2     2023-02-10 [1] CRAN (R 4.3.0)\n magrittr           2.0.3     2022-03-30 [1] CRAN (R 4.3.0)\n markdown           1.6       2023-04-07 [1] CRAN (R 4.3.0)\n MASS               7.3-58.2  2023-01-23 [4] CRAN (R 4.2.2)\n Matrix             1.5-1     2022-09-13 [4] CRAN (R 4.2.1)\n matrixStats        1.0.0     2023-06-02 [1] CRAN (R 4.3.0)\n modeltools         0.2-23    2020-03-05 [1] CRAN (R 4.3.0)\n multcomp           1.4-25    2023-06-20 [1] CRAN (R 4.3.0)\n munsell            0.5.0     2018-06-12 [1] CRAN (R 4.3.0)\n mvtnorm            1.1-3     2021-10-08 [1] CRAN (R 4.3.0)\n nlme               3.1-162   2023-01-31 [4] CRAN (R 4.2.2)\n patchwork          1.1.2     2022-08-19 [1] CRAN (R 4.3.0)\n pillar             1.9.0     2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig          2.0.3     2019-09-22 [1] CRAN (R 4.3.0)\n plyr               1.8.8     2022-11-11 [1] CRAN (R 4.3.0)\n purrr            * 1.0.1     2023-01-10 [1] CRAN (R 4.3.0)\n R6                 2.5.1     2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp               1.0.10    2023-01-22 [1] CRAN (R 4.3.0)\n RCurl              1.98-1.12 2023-03-27 [1] CRAN (R 4.3.0)\n readr            * 2.1.4     2023-02-10 [1] CRAN (R 4.3.0)\n reshape2           1.4.4     2020-04-09 [1] CRAN (R 4.3.0)\n rlang              1.1.1     2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown          2.23      2023-07-01 [1] CRAN (R 4.3.0)\n rprojroot          2.0.3     2022-04-02 [1] CRAN (R 4.3.0)\n rstatix            0.7.2     2023-02-01 [1] CRAN (R 4.3.0)\n rstudioapi         0.14      2022-08-22 [1] CRAN (R 4.3.0)\n S4Vectors          0.38.0    2023-04-25 [1] Bioconductor\n sandwich           3.0-2     2022-06-15 [1] CRAN (R 4.3.0)\n scales             1.2.1     2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo        1.2.2     2021-12-06 [1] CRAN (R 4.3.0)\n stringi            1.7.12    2023-01-11 [1] CRAN (R 4.3.0)\n stringr          * 1.5.0     2022-12-02 [1] CRAN (R 4.3.0)\n survival           3.5-3     2023-02-12 [4] CRAN (R 4.2.2)\n TH.data            1.1-2     2023-04-17 [1] CRAN (R 4.3.0)\n tibble           * 3.2.1     2023-03-20 [1] CRAN (R 4.3.0)\n tidyr            * 1.3.0     2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect         1.2.0     2022-10-10 [1] CRAN (R 4.3.0)\n tidytree           0.4.2     2022-12-18 [1] CRAN (R 4.3.0)\n tidyverse        * 2.0.0     2023-02-22 [1] CRAN (R 4.3.0)\n timechange         0.2.0     2023-01-11 [1] CRAN (R 4.3.0)\n treeio             1.24.1    2023-05-31 [1] Bioconductor\n tzdb               0.3.0     2022-03-28 [1] CRAN (R 4.3.0)\n utf8               1.2.3     2023-01-31 [1] CRAN (R 4.3.0)\n vctrs              0.6.3     2023-06-14 [1] CRAN (R 4.3.0)\n vipor              0.4.5     2017-03-22 [1] CRAN (R 4.3.0)\n vroom              1.6.3     2023-04-28 [1] CRAN (R 4.3.0)\n withr              2.5.0     2022-03-03 [1] CRAN (R 4.3.0)\n xfun               0.39      2023-04-20 [1] CRAN (R 4.3.0)\n xml2               1.3.4     2023-04-27 [1] CRAN (R 4.3.0)\n XVector            0.40.0    2023-04-25 [1] Bioconductor\n yaml               2.3.7     2023-01-23 [1] CRAN (R 4.3.0)\n yulab.utils        0.0.6     2022-12-20 [1] CRAN (R 4.3.0)\n zlibbioc           1.46.0    2023-04-25 [1] Bioconductor\n zoo                1.8-12    2023-04-13 [1] CRAN (R 4.3.0)\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n## References {.unnumbered}\n",
    "supporting": [
      "03_orthogroup_inference_dbs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}