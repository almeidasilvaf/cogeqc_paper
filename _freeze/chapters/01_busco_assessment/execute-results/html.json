{
  "hash": "df6dc13a3c2128f16809a5969d9bd50f",
  "result": {
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Assessing the completeness of Chlorophyta genomes\n\nHere, we will use *[cogeqc](https://bioconductor.org/packages/3.17/cogeqc)* to assess the completeness \nof Chlorophyta genomes available on Pico-PLAZA 3.0 [@van2018plaza] using \nBest Universal Single-Copy Orthologs (BUSCOs).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(cogeqc)\nlibrary(tidyverse)\nlibrary(Herper)\n\nset.seed(123) # for reproducibility\noptions(timeout = 6000) # to load files from the web\n```\n:::\n\n\n\n## Managing external dependencies with virtual environments\n\nHere, for convenience, we will install BUSCO in a Conda environment for use\nwith *[cogeqc](https://bioconductor.org/packages/3.17/cogeqc)*. For that, we will use\nthe Bioconductor package *[Herper](https://bioconductor.org/packages/3.17/Herper)*.\n\nBelow, you can find the code to install miniconda in a directory of your\nchoice (here, \"~/Documents\") and create a virtual environment containing\na BUSCO installation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Path to where BUSCO will be installed and env name\nmy_miniconda <- file.path(\"~/Documents\", \"miniconda\")\nenv <- \"cogeqc_env\"\n\n# Create env named `cogeqc_env` with BUSCO in it\ninstall_CondaTools(\n    tools = \"busco==5.3.0\", \n    env = env, \n    channels = c(\"conda-forge\", \"bioconda\"),\n    pathToMiniConda = my_miniconda\n)\n```\n:::\n\n\n## Data acquisition\n\nNow, we will load all genomes directly from PLAZA as `DNAStringSet` objects\nand export them to a single directory of FASTA files, so we can run\nBUSCO in batch mode.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Links to Chlorophyta genomes from Pico-PLAZA 3.0\nbase_url <- \"ftp://ftp.psb.ugent.be/pub/plaza/plaza_pico_03/Genomes/\"\nlinks <- paste0(\n    base_url, \n    c(\"mpu.fasta.gz\", \"mrcc299.fasta.gz\", \"olu.fasta.gz\", \"ome.fasta.gz\",\n      \"orcc809.fasta.gz\", \"ota.fasta.gz\", \"bprrcc1105.fasta.gz\",\n      \"cre.fasta.gz\", \"vca.fasta.gz\", \"cvu.fasta.gz\", \"acg.fasta.gz\",\n      \"pse3.fasta.gz\", \"prcc4223.fasta.gz\", \"cnc64a.fasta.gz\", \n      \"hsp.fasta.gz\", \"apr.fasta.gz\")\n)\n\n# Load all genomes\ngenomes <- lapply(links, Biostrings::readDNAStringSet)\nnames(genomes) <- basename(links)\n\n# Write all genomes to a subdirectory of tempdir\ngenomes_path <- file.path(tempdir(), \"genomes\")\nif(!dir.exists(genomes_path)) { fs::dir_create(genomes_path) }\n\nwrite <- lapply(seq_along(genomes), function(x) {\n    Biostrings::writeXStringSet(\n        x = genomes[[x]], \n        filepath = file.path(genomes_path, names(genomes)[x])\n    )\n    return(NULL)\n})\n```\n:::\n\n\n## Running BUSCO\n\nNow that all genomes are stored as FASTA files in /tmp/Rtmp9EWuNG/genomes, we\ncan assess their completeness with BUSCO.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# See all possible lineage datasets\nwith_CondaEnv(\n    env, list_busco_datasets(), my_miniconda\n)\n\n# Run BUSCO using chlorophyta_odb10 as the lineage data set\nbusco <- with_CondaEnv(\n    env,\n    run_busco(\n        sequence = genomes_path, \n        outlabel = \"chlorophyta_busco\",\n        mode = \"genome\",\n        lineage = \"chlorophyta_odb10\",\n        outpath = tempdir(),\n        download_path = tempdir()\n    ),\n    my_miniconda\n)\n\n# Read and parse the output\noutdir <- file.path(tempdir(), \"chlorophyta_busco\")\nbusco_summary <- read_busco(outdir)\nsave(\n    busco_summary,\n    file = here::here(\"products\", \"result_files\", \"busco_summary.rda\"),\n    compress = \"xz\"\n)\n```\n:::\n\n\nThe parsed BUSCO output (as returned by `read_busco()`) looks like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(here(\"products\", \"result_files\", \"busco_summary.rda\"))\nhead(busco_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Class Frequency           Lineage             File\n1 Complete_SC      94.1 chlorophyta_odb10    pse3.fasta.gz\n2 Complete_SC      95.1 chlorophyta_odb10     cre.fasta.gz\n3 Complete_SC      96.8 chlorophyta_odb10     olu.fasta.gz\n4 Complete_SC      98.7 chlorophyta_odb10 mrcc299.fasta.gz\n5 Complete_SC      91.8 chlorophyta_odb10     apr.fasta.gz\n6 Complete_SC      86.4 chlorophyta_odb10     acg.fasta.gz\n```\n:::\n:::\n\n\n\n## Visualizing summary statistics\n\nFinally, let's visualize summary BUSCO stats:\n\n\n::: {.cell fig.dpi='200'}\n\n```{.r .cell-code}\n# Manually create tree based on Pico-PLAZA's tree\nc_branches <- function(b1, b2) {\n    x <- paste0(\"(\", b1, \",\", b2, \")\")\n}\n\nostreococcus_root <- \"((((Ostreococcus_lucimarinus, Ostreococcus_sp_RCC809), Ostreococcus_tauri), Ostreococcus_mediterraneus), Bathycoccus_prasinos)\"\nmicromonas <- \"(Micromonas_pusilla_strain_CCMP1545, Micromonas_sp_RCC299)\"\nchlamydomonadales <- \"(Volvox_carteri, Chlamydomonas_reinhardtii)\"\npicochlorum <- \"(Picochlorum_sp_SENEW3, Picochlorum_RCC4223)\"\nchlorellales <- \"((Helicosporidium_sp, Auxenochlorella_protothecoides), Chlorella_sp_NC64A)\"\ntrebouxiophyceae <- c_branches(\n    \"(Coccomyxa_subellipsoidea_C-169, Asterochloris_sp_Cgr/DA1pho_v2)\", \n    c_branches(picochlorum, chlorellales)\n)\n\nchlo_tree <- c_branches(\n    c_branches(\n        ostreococcus_root, micromonas\n    ),\n    c_branches(\n        chlamydomonadales, trebouxiophyceae\n    )\n)\nchlo_tree <- paste0(chlo_tree, \";\")\n\n# Read tree as a phylo object and clean species names\nchlo_tree <- treeio::read.tree(text = chlo_tree)\nchlo_tree$tip.label <- gsub(\"_\", \" \", chlo_tree$tip.label)\n\n# Plot species tree and get species order from tree topology\np_tree <- plot_species_tree(chlo_tree, xlim = c(0, 12))\ntaxa_order <- rev(ggtree::get_taxa_name(p_tree)) \n\n# Plot BUSCO summary stats\np_busco <- busco_summary %>%\n    mutate(File = str_replace_all(File, \"\\\\.fasta.*\", \"\")) %>%\n    mutate(File = str_replace_all(\n        File,\n        c(\n            \"pse3\" = \"Picochlorum sp SENEW3\",\n            \"cre\" = \"Chlamydomonas reinhardtii\",\n            \"olu\" = \"Ostreococcus lucimarinus\",\n            \"mrcc299\" = \"Micromonas sp RCC299\",\n            \"apr\" = \"Auxenochlorella protothecoides\",\n            \"acg\" = \"Asterochloris sp Cgr/DA1pho v2\",\n            \"cvu\" = \"Coccomyxa subellipsoidea C-169\",\n            \"bprrcc1105\" = \"Bathycoccus prasinos\",\n            \"orcc809\" = \"Ostreococcus sp RCC809\",\n            \"prcc4223\" = \"Picochlorum RCC4223\",\n            \"ota\" = \"Ostreococcus tauri\",\n            \"hsp\" = \"Helicosporidium sp\",\n            \"mpu\" = \"Micromonas pusilla strain CCMP1545\",\n            \"vca\" = \"Volvox carteri\",\n            \"ome\" = \"Ostreococcus mediterraneus\",\n            \"cnc64a\" = \"Chlorella sp NC64A\"\n        )\n    )) %>%\n    mutate(File = factor(File, taxa_order)) %>%\n    plot_busco() +\n    theme(axis.text.y = element_blank()) +\n    labs(y = \"\")\n\n# Combining phylogeny with BUSCO plot\ncombined <- patchwork::wrap_plots(p_tree, p_busco)\ncombined\n```\n\n::: {.cell-output-display}\n![BUSCO scores for Chlorophyta genomes on Pico-PLAZA 3.0.](01_busco_assessment_files/figure-html/viz-busco-1.png){width=1248}\n:::\n:::\n\n\nExcept for *Helicosporidium sp.*, Chlorophyta genomes on Pico-PLAZA 3.0 have\na high quality, as denoted by their high completeness.\n\n\n::: {.cell}\n\n:::\n\n\n## Session info {.unnumbered}\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Brussels\n date     2023-08-01\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package          * version   date (UTC) lib source\n ape                5.7-1     2023-03-13 [1] CRAN (R 4.3.0)\n aplot              0.1.10    2023-03-08 [1] CRAN (R 4.3.0)\n beeswarm           0.4.0     2021-06-01 [1] CRAN (R 4.3.0)\n BiocGenerics       0.46.0    2023-04-25 [1] Bioconductor\n BiocManager        1.30.20   2023-02-24 [1] CRAN (R 4.3.0)\n BiocStyle          2.28.0    2023-04-25 [1] Bioconductor\n Biostrings         2.68.0    2023-04-25 [1] Bioconductor\n bitops             1.0-7     2021-04-24 [1] CRAN (R 4.3.0)\n cli                3.6.1     2023-03-23 [1] CRAN (R 4.3.0)\n cogeqc           * 1.4.0     2023-04-25 [1] Bioconductor\n colorspace         2.1-0     2023-01-23 [1] CRAN (R 4.3.0)\n crayon             1.5.2     2022-09-29 [1] CRAN (R 4.3.0)\n digest             0.6.31    2022-12-11 [1] CRAN (R 4.3.0)\n dplyr            * 1.1.2     2023-04-20 [1] CRAN (R 4.3.0)\n evaluate           0.20      2023-01-17 [1] CRAN (R 4.3.0)\n fansi              1.0.4     2023-01-22 [1] CRAN (R 4.3.0)\n farver             2.1.1     2022-07-06 [1] CRAN (R 4.3.0)\n fastmap            1.1.1     2023-02-24 [1] CRAN (R 4.3.0)\n forcats          * 1.0.0     2023-01-29 [1] CRAN (R 4.3.0)\n fs                 1.6.2     2023-04-25 [1] CRAN (R 4.3.0)\n generics           0.1.3     2022-07-05 [1] CRAN (R 4.3.0)\n GenomeInfoDb       1.36.0    2023-04-25 [1] Bioconductor\n GenomeInfoDbData   1.2.10    2023-04-28 [1] Bioconductor\n ggbeeswarm         0.7.2     2023-04-29 [1] CRAN (R 4.3.0)\n ggfun              0.0.9     2022-11-21 [1] CRAN (R 4.3.0)\n ggplot2          * 3.4.1     2023-02-10 [1] CRAN (R 4.3.0)\n ggplotify          0.1.0     2021-09-02 [1] CRAN (R 4.3.0)\n ggtree             3.8.0     2023-04-25 [1] Bioconductor\n glue               1.6.2     2022-02-24 [1] CRAN (R 4.3.0)\n gridGraphics       0.5-1     2020-12-13 [1] CRAN (R 4.3.0)\n gtable             0.3.3     2023-03-21 [1] CRAN (R 4.3.0)\n here             * 1.0.1     2020-12-13 [1] CRAN (R 4.3.0)\n Herper           * 1.10.1    2023-07-12 [1] Bioconductor\n hms                1.1.3     2023-03-21 [1] CRAN (R 4.3.0)\n htmltools          0.5.5     2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets        1.6.2     2023-03-17 [1] CRAN (R 4.3.0)\n igraph             1.4.2     2023-04-07 [1] CRAN (R 4.3.0)\n IRanges            2.34.0    2023-04-25 [1] Bioconductor\n jsonlite           1.8.4     2022-12-06 [1] CRAN (R 4.3.0)\n knitr              1.42      2023-01-25 [1] CRAN (R 4.3.0)\n labeling           0.4.2     2020-10-20 [1] CRAN (R 4.3.0)\n lattice            0.20-45   2021-09-22 [4] CRAN (R 4.2.0)\n lazyeval           0.2.2     2019-03-15 [1] CRAN (R 4.3.0)\n lifecycle          1.0.3     2022-10-07 [1] CRAN (R 4.3.0)\n lubridate        * 1.9.2     2023-02-10 [1] CRAN (R 4.3.0)\n magrittr           2.0.3     2022-03-30 [1] CRAN (R 4.3.0)\n Matrix             1.5-1     2022-09-13 [4] CRAN (R 4.2.1)\n munsell            0.5.0     2018-06-12 [1] CRAN (R 4.3.0)\n nlme               3.1-162   2023-01-31 [4] CRAN (R 4.2.2)\n patchwork          1.1.2     2022-08-19 [1] CRAN (R 4.3.0)\n pillar             1.9.0     2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig          2.0.3     2019-09-22 [1] CRAN (R 4.3.0)\n plyr               1.8.8     2022-11-11 [1] CRAN (R 4.3.0)\n png                0.1-8     2022-11-29 [1] CRAN (R 4.3.0)\n purrr            * 1.0.1     2023-01-10 [1] CRAN (R 4.3.0)\n R6                 2.5.1     2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp               1.0.10    2023-01-22 [1] CRAN (R 4.3.0)\n RCurl              1.98-1.12 2023-03-27 [1] CRAN (R 4.3.0)\n readr            * 2.1.4     2023-02-10 [1] CRAN (R 4.3.0)\n reshape2           1.4.4     2020-04-09 [1] CRAN (R 4.3.0)\n reticulate       * 1.30      2023-06-09 [1] CRAN (R 4.3.0)\n rjson              0.2.21    2022-01-09 [1] CRAN (R 4.3.0)\n rlang              1.1.1     2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown          2.21      2023-03-26 [1] CRAN (R 4.3.0)\n rprojroot          2.0.3     2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi         0.14      2022-08-22 [1] CRAN (R 4.3.0)\n S4Vectors          0.38.0    2023-04-25 [1] Bioconductor\n scales             1.2.1     2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo        1.2.2     2021-12-06 [1] CRAN (R 4.3.0)\n stringi            1.7.12    2023-01-11 [1] CRAN (R 4.3.0)\n stringr          * 1.5.0     2022-12-02 [1] CRAN (R 4.3.0)\n tibble           * 3.2.1     2023-03-20 [1] CRAN (R 4.3.0)\n tidyr            * 1.3.0     2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect         1.2.0     2022-10-10 [1] CRAN (R 4.3.0)\n tidytree           0.4.2     2022-12-18 [1] CRAN (R 4.3.0)\n tidyverse        * 2.0.0     2023-02-22 [1] CRAN (R 4.3.0)\n timechange         0.2.0     2023-01-11 [1] CRAN (R 4.3.0)\n treeio             1.24.1    2023-05-31 [1] Bioconductor\n tzdb               0.3.0     2022-03-28 [1] CRAN (R 4.3.0)\n utf8               1.2.3     2023-01-31 [1] CRAN (R 4.3.0)\n vctrs              0.6.2     2023-04-19 [1] CRAN (R 4.3.0)\n vipor              0.4.5     2017-03-22 [1] CRAN (R 4.3.0)\n withr              2.5.0     2022-03-03 [1] CRAN (R 4.3.0)\n xfun               0.39      2023-04-20 [1] CRAN (R 4.3.0)\n XVector            0.40.0    2023-04-25 [1] Bioconductor\n yaml               2.3.7     2023-01-23 [1] CRAN (R 4.3.0)\n yulab.utils        0.0.6     2022-12-20 [1] CRAN (R 4.3.0)\n zlibbioc           1.46.0    2023-04-25 [1] Bioconductor\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n## References {.unnumbered}\n",
    "supporting": [
      "01_busco_assessment_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}