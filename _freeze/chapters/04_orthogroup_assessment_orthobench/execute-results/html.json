{
  "hash": "ce0bbcae1e58ff27c317ec693447f3f7",
  "result": {
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Orthogroup assessment in Orthobench\n\nHere, we will assess the orthogroups from the Orthobench \ndata set [@trachana2011orthology; @emms2020benchmarking] using orthogroup\nscores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\noptions(timeout = 6000)\n\nlibrary(cogeqc)\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(here)\nlibrary(biomartr)\n```\n:::\n\n\n## Data acquisition\n\nThe data set can be obtained in [this GitHub repository](https://github.com/davidemms/Open_Orthobench/tree/master/BENCHMARKS). \nFirst, let's create a data frame containing all gene IDs for each species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Repo's URL\nurl <- \"https://api.github.com/repos/davidemms/Open_Orthobench/git/trees/master?recursive=2\"\n\n# Get all file paths\npaths <- GET(url) |> content()\n\n# Get only file paths for sequence files\npaths <- unlist(lapply(paths$tree, function(x) x$path))\nsequence_paths <- data.frame(\n    Path = paths\n) |> \n    separate(Path, c(\"base\", \"folder\", \"filename\"), \"/\") |>\n    filter(folder == \"Input\") |>\n    filter(str_detect(filename, \"\\\\.fa\")) |>\n    mutate(\n        download_path = file.path(\n            \"https://github.com/davidemms/Open_Orthobench/raw/master\",\n            base, folder, filename\n        )\n    )\n\n# Create a data frame of gene IDs per species\ngenes_per_species <- Reduce(rbind, lapply(seq_len(nrow(sequence_paths)), function(x) {\n    \n    species <- gsub(\".pep.*\", \"\", sequence_paths$filename[x])\n    gene_ids <- names(\n        Biostrings::readAAStringSet(sequence_paths$download_path[x])\n    )\n    \n    species_and_genes <- data.frame(\n        Species = species,\n        Gene = gene_ids\n    )\n    \n    return(species_and_genes)\n}))\n```\n:::\n\n\nNow, we will get all reference orthogroups from Orthobench and reshape them\nso that they look like the standard orthogroup data frame in __cogeqc__\n(with columns `Orthogroup`, `Species`, and `Gene`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get URL to each orthogroup\nog_paths <- data.frame(\n    Path = paths\n) |> \n    separate(Path, c(\"base\", \"folder\", \"filename\"), \"/\") |>\n    filter(folder == \"RefOGs\") |>\n    filter(str_detect(filename, \"\\\\.txt\")) |>\n    mutate(\n        download_path = file.path(\n            \"https://github.com/davidemms/Open_Orthobench/raw/master\",\n            base, folder, filename\n        )\n    )\n\n# Read orthogroups and reformat them as cogeqc's orthogroup data frame\nreference_ogs <- Reduce(rbind, lapply(seq_len(nrow(og_paths)), function(x) {\n    \n    og_name <- gsub(\".txt\", \"\", og_paths$filename[x])\n    og_genes <- readLines(og_paths$download_path[x])\n    \n    og_df <- data.frame(\n        Orthogroup = og_name,\n        Gene = og_genes\n    ) |>\n        left_join(genes_per_species) |>\n        dplyr::select(Orthogroup, Species, Gene)\n    \n    return(og_df)\n}))\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nFinally, we will use the biomartr package [@drost2017biomartr] to obtain \nprotein domain annotation for each species from Ensembl.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nannotation_list <- lapply(unique(reference_ogs$Species), function(x) {\n    \n    species_id <- paste0(\n        tolower(substr(x, 1, 1)), # first letter of genus\n        gsub(\".*_\", \"\", gsub(\"\\\\..*\", \"\", x)) # entire specific epithet\n    )\n    \n    if(startsWith(x, \"Canis\")) {\n        species_id <- \"clfamiliaris\"\n    }\n    \n    genes <- reference_ogs |>\n        filter(Species == x) |>\n        pull(Gene)\n    \n    annot <- biomart(\n        genes = genes,\n        mart = \"ENSEMBL_MART_ENSEMBL\",\n        dataset = paste0(species_id, \"_gene_ensembl\"),\n        attributes = \"interpro\",\n        filters = \"ensembl_peptide_id\"\n    ) |>\n        dplyr::select(Gene = ensembl_peptide_id, Annotation = interpro)\n    \n    return(annot)\n})\nnames(annotation_list) <- unique(reference_ogs$Species)\n\n# Remove empty elements (i.e., species for which we could not obtain annotation)\nempty <- sapply(annotation_list, nrow) == 0\nannotation_list <- annotation_list[!empty]\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Orthogroup assessment\n\nNow that we have the orthogroup data frame and the annotation list, we can\ncalculate homogeneity scores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_orthobench_homogeneity <- reference_ogs |>\n    ## Remove species for which we could not obtain domain annotation\n    filter(Species %in% names(annotation_list)) |>\n    ## Calculate homogeneity scores\n    left_join(Reduce(rbind, annotation_list)) |>\n    calculate_H(correct_overclustering = FALSE) |>\n    dplyr::filter(!is.na(Score)) |>\n    ## Plot a histogram of scores\n    ggplot(aes(x = Score, y = ..count../sum(..count..))) +\n    geom_histogram(fill = \"grey60\", color = \"black\", bins = 60) +\n    labs(\n        title = \"Homogeneity scores for Orthobench's reference orthogroups\",\n        y = \"Relative frequency\", x = \"Homogeneity scores\"\n    ) +\n    xlim(0, 1) +\n    theme_bw()\n\np_orthobench_homogeneity\n```\n\n::: {.cell-output-display}\n![Homogeneity scores for Orthobench's reference orthogroups.](04_orthogroup_assessment_orthobench_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThe plot shows that homogeneity scores for reference orthogroups tend to be\nvery close to 1, as expected, which validates the rationale behind our approach.\nOf note, most orthogroups do not reach perfect homogeneity, probably due to\ndomain gains and losses throughout their evolution, but they are still very\nclose to 1. In summary, our findings here demonstrate that reference-quality\northogroups should indeed have homogeneity scores as close to 1 as possible,\nand users should seek a similar distribution when inferring \northogroups for their own data sets.\n\n## Session info {.unnumbered}\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Brussels\n date     2023-08-04\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package          * version   date (UTC) lib source\n AnnotationDbi      1.62.0    2023-04-25 [1] Bioconductor\n ape                5.7-1     2023-03-13 [1] CRAN (R 4.3.0)\n aplot              0.1.10    2023-03-08 [1] CRAN (R 4.3.0)\n beeswarm           0.4.0     2021-06-01 [1] CRAN (R 4.3.0)\n Biobase            2.60.0    2023-04-25 [1] Bioconductor\n BiocFileCache      2.8.0     2023-04-25 [1] Bioconductor\n BiocGenerics       0.46.0    2023-04-25 [1] Bioconductor\n biomaRt            2.56.0    2023-04-25 [1] Bioconductor\n biomartr         * 1.0.3     2023-05-07 [1] CRAN (R 4.3.0)\n Biostrings         2.68.0    2023-04-25 [1] Bioconductor\n bit                4.0.5     2022-11-15 [1] CRAN (R 4.3.0)\n bit64              4.0.5     2020-08-30 [1] CRAN (R 4.3.0)\n bitops             1.0-7     2021-04-24 [1] CRAN (R 4.3.0)\n blob               1.2.4     2023-03-17 [1] CRAN (R 4.3.0)\n cachem             1.0.8     2023-05-01 [1] CRAN (R 4.3.0)\n cli                3.6.1     2023-03-23 [1] CRAN (R 4.3.0)\n cogeqc           * 1.4.0     2023-04-25 [1] Bioconductor\n colorspace         2.1-0     2023-01-23 [1] CRAN (R 4.3.0)\n crayon             1.5.2     2022-09-29 [1] CRAN (R 4.3.0)\n curl               5.0.0     2023-01-12 [1] CRAN (R 4.3.0)\n data.table         1.14.8    2023-02-17 [1] CRAN (R 4.3.0)\n DBI                1.1.3     2022-06-18 [1] CRAN (R 4.3.0)\n dbplyr             2.3.2     2023-03-21 [1] CRAN (R 4.3.0)\n digest             0.6.31    2022-12-11 [1] CRAN (R 4.3.0)\n dplyr            * 1.1.2     2023-04-20 [1] CRAN (R 4.3.0)\n evaluate           0.20      2023-01-17 [1] CRAN (R 4.3.0)\n fansi              1.0.4     2023-01-22 [1] CRAN (R 4.3.0)\n farver             2.1.1     2022-07-06 [1] CRAN (R 4.3.0)\n fastmap            1.1.1     2023-02-24 [1] CRAN (R 4.3.0)\n filelock           1.0.2     2018-10-05 [1] CRAN (R 4.3.0)\n forcats          * 1.0.0     2023-01-29 [1] CRAN (R 4.3.0)\n generics           0.1.3     2022-07-05 [1] CRAN (R 4.3.0)\n GenomeInfoDb       1.36.0    2023-04-25 [1] Bioconductor\n GenomeInfoDbData   1.2.10    2023-04-28 [1] Bioconductor\n ggbeeswarm         0.7.2     2023-04-29 [1] CRAN (R 4.3.0)\n ggfun              0.0.9     2022-11-21 [1] CRAN (R 4.3.0)\n ggplot2          * 3.4.1     2023-02-10 [1] CRAN (R 4.3.0)\n ggplotify          0.1.0     2021-09-02 [1] CRAN (R 4.3.0)\n ggtree             3.8.0     2023-04-25 [1] Bioconductor\n glue               1.6.2     2022-02-24 [1] CRAN (R 4.3.0)\n gridGraphics       0.5-1     2020-12-13 [1] CRAN (R 4.3.0)\n gtable             0.3.3     2023-03-21 [1] CRAN (R 4.3.0)\n here             * 1.0.1     2020-12-13 [1] CRAN (R 4.3.0)\n hms                1.1.3     2023-03-21 [1] CRAN (R 4.3.0)\n htmltools          0.5.5     2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets        1.6.2     2023-03-17 [1] CRAN (R 4.3.0)\n httr             * 1.4.5     2023-02-24 [1] CRAN (R 4.3.0)\n igraph             1.4.2     2023-04-07 [1] CRAN (R 4.3.0)\n IRanges            2.34.0    2023-04-25 [1] Bioconductor\n jsonlite           1.8.4     2022-12-06 [1] CRAN (R 4.3.0)\n KEGGREST           1.40.0    2023-04-25 [1] Bioconductor\n knitr              1.42      2023-01-25 [1] CRAN (R 4.3.0)\n labeling           0.4.2     2020-10-20 [1] CRAN (R 4.3.0)\n lattice            0.20-45   2021-09-22 [4] CRAN (R 4.2.0)\n lazyeval           0.2.2     2019-03-15 [1] CRAN (R 4.3.0)\n lifecycle          1.0.3     2022-10-07 [1] CRAN (R 4.3.0)\n lubridate        * 1.9.2     2023-02-10 [1] CRAN (R 4.3.0)\n magrittr           2.0.3     2022-03-30 [1] CRAN (R 4.3.0)\n memoise            2.0.1     2021-11-26 [1] CRAN (R 4.3.0)\n munsell            0.5.0     2018-06-12 [1] CRAN (R 4.3.0)\n nlme               3.1-162   2023-01-31 [4] CRAN (R 4.2.2)\n patchwork          1.1.2     2022-08-19 [1] CRAN (R 4.3.0)\n pillar             1.9.0     2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig          2.0.3     2019-09-22 [1] CRAN (R 4.3.0)\n plyr               1.8.8     2022-11-11 [1] CRAN (R 4.3.0)\n png                0.1-8     2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits        1.1.1     2020-01-24 [1] CRAN (R 4.3.0)\n progress           1.2.2     2019-05-16 [1] CRAN (R 4.3.0)\n purrr            * 1.0.1     2023-01-10 [1] CRAN (R 4.3.0)\n R6                 2.5.1     2021-08-19 [1] CRAN (R 4.3.0)\n rappdirs           0.3.3     2021-01-31 [1] CRAN (R 4.3.0)\n Rcpp               1.0.10    2023-01-22 [1] CRAN (R 4.3.0)\n RCurl              1.98-1.12 2023-03-27 [1] CRAN (R 4.3.0)\n readr            * 2.1.4     2023-02-10 [1] CRAN (R 4.3.0)\n reshape2           1.4.4     2020-04-09 [1] CRAN (R 4.3.0)\n rlang              1.1.1     2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown          2.21      2023-03-26 [1] CRAN (R 4.3.0)\n rprojroot          2.0.3     2022-04-02 [1] CRAN (R 4.3.0)\n RSQLite            2.3.1     2023-04-03 [1] CRAN (R 4.3.0)\n rstudioapi         0.14      2022-08-22 [1] CRAN (R 4.3.0)\n S4Vectors          0.38.0    2023-04-25 [1] Bioconductor\n scales             1.2.1     2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo        1.2.2     2021-12-06 [1] CRAN (R 4.3.0)\n stringi            1.7.12    2023-01-11 [1] CRAN (R 4.3.0)\n stringr          * 1.5.0     2022-12-02 [1] CRAN (R 4.3.0)\n tibble           * 3.2.1     2023-03-20 [1] CRAN (R 4.3.0)\n tidyr            * 1.3.0     2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect         1.2.0     2022-10-10 [1] CRAN (R 4.3.0)\n tidytree           0.4.2     2022-12-18 [1] CRAN (R 4.3.0)\n tidyverse        * 2.0.0     2023-02-22 [1] CRAN (R 4.3.0)\n timechange         0.2.0     2023-01-11 [1] CRAN (R 4.3.0)\n treeio             1.24.1    2023-05-31 [1] Bioconductor\n tzdb               0.3.0     2022-03-28 [1] CRAN (R 4.3.0)\n utf8               1.2.3     2023-01-31 [1] CRAN (R 4.3.0)\n vctrs              0.6.2     2023-04-19 [1] CRAN (R 4.3.0)\n vipor              0.4.5     2017-03-22 [1] CRAN (R 4.3.0)\n withr              2.5.0     2022-03-03 [1] CRAN (R 4.3.0)\n xfun               0.39      2023-04-20 [1] CRAN (R 4.3.0)\n XML                3.99-0.14 2023-03-19 [1] CRAN (R 4.3.0)\n xml2               1.3.4     2023-04-27 [1] CRAN (R 4.3.0)\n XVector            0.40.0    2023-04-25 [1] Bioconductor\n yaml               2.3.7     2023-01-23 [1] CRAN (R 4.3.0)\n yulab.utils        0.0.6     2022-12-20 [1] CRAN (R 4.3.0)\n zlibbioc           1.46.0    2023-04-25 [1] Bioconductor\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n## References {.unnumbered}\n\n",
    "supporting": [
      "04_orthogroup_assessment_orthobench_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}